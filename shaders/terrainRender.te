#version 400 core

layout (quads, fractional_odd_spacing) in;

uniform sampler2D terrainTexture;

uniform mat4 projMatrix;
uniform mat4 mvMatrix;

in vec2 tes_in[];

smooth out vec2 tc_fs;
smooth out vec3 fragment_position;

void main(void)
{
    // Our scaling factor is based on the height of the contours. 
    // The maximum height is ~8000 feet, minimum ~600 feet. This gives ~900 total feet, 
    const float depth = 900;
    
    // Get an average texture coordinate and position over the quad
    vec4 tcPos1 = mix(vec4(tes_in[0], gl_in[0].gl_Position.xy), vec4(tes_in[1], gl_in[1].gl_Position.xy), gl_TessCoord.x);
    vec4 tcPos2 = mix(vec4(tes_in[2], gl_in[2].gl_Position.xy), vec4(tes_in[3], gl_in[3].gl_Position.xy), gl_TessCoord.x);
    vec4 tcPos = mix(tcPos2, tcPos1, gl_TessCoord.y);
    tc_fs = tcPos.xy;
    
    // Note that as the terrain texture only contains height, so 'r' is the only valid (0-1) component.
    float offset = 1.0f / 102.0f;
    float height = texture(terrainTexture, tcPos.xy + vec2(offset, offset), 0).r * depth;
    vec4 pos = vec4(tcPos.zw, height, 1.0f);
    
    gl_Position = projMatrix * mvMatrix * pos;  
    fragment_position = vec3(pos);	
    
}


